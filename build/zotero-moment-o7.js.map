{"version":3,"file":"zotero-moment-o7.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,sBAAsB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACzE,yDAAyD,gBAAgB;AACzE;AACA;AACA,MAAM;AACN;AACA,qDAAqD,oBAAoB;AACzE;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,qDAAqD,oBAAoB;AACzE,4CAA4C,kCAAkC,KAAK,gBAAgB;AACnG,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACzE,yDAAyD,gBAAgB;AACzE;AACA;AACA,MAAM;AACN;AACA,qDAAqD,oBAAoB;AACzE;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,qDAAqD,oBAAoB;AACzE,4CAA4C,kCAAkC,KAAK,gBAAgB;AACnG,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,qCAAqC,UAAU,IAAI,MAAM;AACzD;AACA;;AAEA;AACA,oDAAoD,oBAAoB;AACxE,2DAA2D,cAAc;AACzE,8CAA8C,uBAAuB;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACzE,yDAAyD,gBAAgB;AACzE;AACA;AACA,MAAM;AACN;AACA,qDAAqD,oBAAoB;AACzE;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,qDAAqD,oBAAoB;AACzE,4CAA4C,kCAAkC,KAAK,gBAAgB;AACnG,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACzE,0DAA0D,gBAAgB;AAC1E;AACA;AACA,MAAM;AACN,qDAAqD,oBAAoB;AACzE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACzE,yDAAyD,gBAAgB;AACzE;AACA;AACA,MAAM;AACN,qDAAqD,oBAAoB;AACzE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,E","sources":["webpack://zotero-moment-o7/./src/zotero-moment-o7.js"],"sourcesContent":["// Main plugin object\nZotero.MomentO7 = {\n\tid: null,\n\tversion: null,\n\trootURI: null,\n\tinitialized: false,\n\taddedElementIDs: [],\n\twindows: new WeakMap(),\n\tnotifierID: null,\n\n\tinit({ id, version, rootURI }) {\n\t\tif (this.initialized) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.id = id;\n\t\tthis.version = version;\n\t\tthis.rootURI = rootURI;\n\t\tthis.initialized = true;\n\n\t\tthis.log(\"Initializing Zotero Moment-o7 v\" + version);\n\n\t\t// Initialize namespace for new architecture\n\t\tif (!Zotero.MomentO7) {\n\t\t\tZotero.MomentO7 = this;\n\t\t}\n\n\t\t// Load new architecture modules\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/BaseArchiveService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ServiceRegistry.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ArchiveCoordinator.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/MementoChecker.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/Preferences.js\");\n\n\t\t// Load services\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/InternetArchiveService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ArchiveTodayService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/PermaCCService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/UKWebArchiveService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ArquivoPtService.js\");\n\n\t\t// Load legacy modules (to be refactored)\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/Signpost.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/IaPusher.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ArchiveTodayPusher.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/RobustLinkCreator.js\");\n\n\t\t// Initialize preferences\n\t\tZotero.MomentO7.Preferences.init();\n\n\t\t// Initialize new architecture\n\t\tthis.initializeServices();\n\n\t\t// Register notifier to watch for new items\n\t\tthis.registerNotifier();\n\t},\n\n\tlog(msg) {\n\t\tZotero.debug(\"Zotero Moment-o7: \" + msg);\n\t},\n\n\tasync main() {\n\t\tthis.log(\"Main initialization complete\");\n\t},\n\n\tinitializeServices() {\n\t\t// Initialize core components\n\t\tZotero.MomentO7.ServiceRegistry.init();\n\t\tZotero.MomentO7.ArchiveCoordinator.init();\n\n\t\t// Register services\n\t\tconst iaService = new Zotero.MomentO7.InternetArchiveService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"internetarchive\", iaService);\n\n\t\tconst atService = new Zotero.MomentO7.ArchiveTodayService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"archivetoday\", atService);\n\n\t\tconst permaccService = new Zotero.MomentO7.PermaCCService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"permacc\", permaccService);\n\n\t\tconst ukWebArchiveService = new Zotero.MomentO7.UKWebArchiveService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"ukwebarchive\", ukWebArchiveService);\n\n\t\tconst arquivoPtService = new Zotero.MomentO7.ArquivoPtService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"arquivopt\", arquivoPtService);\n\n\t\tthis.log(\"Services initialized and registered\");\n\t},\n\n\tregisterNotifier() {\n\t\t// Register notifier to watch for new items being added\n\t\tconst notifierCallbacks = {\n\t\t\tnotify: async (event, type, ids, _extraData) => {\n\t\t\t\tif (type === \"item\" && event === \"add\") {\n\t\t\t\t\tthis.log(\"New items added: \" + ids.join(\", \"));\n\n\t\t\t\t\tfor (const id of ids) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst item = await Zotero.Items.getAsync(id);\n\n\t\t\t\t\t\t\t// Check if auto-archive is enabled\n\t\t\t\t\t\t\tconst autoArchiveEnabled = Zotero.Prefs.get(\"extensions.momento7.autoArchive\", true);\n\n\t\t\t\t\t\t\t// Only process web pages and other items with URLs\n\t\t\t\t\t\t\tif (autoArchiveEnabled && item && item.getField(\"url\")) {\n\t\t\t\t\t\t\t\tthis.log(\"Auto-archiving item: \" + item.getField(\"title\"));\n\n\t\t\t\t\t\t\t\t// Use new architecture for auto-archiving\n\t\t\t\t\t\t\t\tawait Zotero.MomentO7.ArchiveCoordinator.autoArchive(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.log(\"Error processing item \" + id + \": \" + error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.notifierID = Zotero.Notifier.registerObserver(notifierCallbacks, [\"item\"]);\n\t\tthis.log(\"Notifier registered with ID: \" + this.notifierID);\n\t},\n\n\tunregisterNotifier() {\n\t\tif (this.notifierID) {\n\t\t\tZotero.Notifier.unregisterObserver(this.notifierID);\n\t\t\tthis.log(\"Notifier unregistered\");\n\t\t\tthis.notifierID = null;\n\t\t}\n\t},\n\n\taddToWindow(window) {\n\t\tif (!window || !window.document) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log(\"Adding to window\");\n\n\t\t// Store window-specific data\n\t\tthis.windows.set(window, {\n\t\t\tmenuItems: [],\n\t\t\tlisteners: []\n\t\t});\n\n\t\t// Add menu items\n\t\tthis.addMenuItems(window);\n\n\t\t// Add Fluent localization if we have locale files\n\t\ttry {\n\t\t\twindow.MozXULElement.insertFTLIfNeeded(\"moment-o7.ftl\");\n\t\t} catch {\n\t\t\t// Fluent files not yet created, will add later\n\t\t\tthis.log(\"Fluent localization not yet available\");\n\t\t}\n\t},\n\n\taddMenuItems(window) {\n\t\tconst doc = window.document;\n\t\tconst zoteroItemMenu = doc.getElementById(\"zotero-itemmenu\");\n\n\t\tif (!zoteroItemMenu) {\n\t\t\tthis.log(\"Item menu not found, will retry later\");\n\t\t\treturn;\n\t\t}\n\n\t\t// Create separator\n\t\tconst separator = doc.createXULElement(\"menuseparator\");\n\t\tseparator.id = \"zotero-moment-o7-separator\";\n\n\t\t// Create main menu\n\t\tconst menu = doc.createXULElement(\"menu\");\n\t\tmenu.id = \"zotero-moment-o7-menu\";\n\t\tmenu.setAttribute(\"label\", \"Archive this Resource\");\n\n\t\t// Create popup\n\t\tconst menupopup = doc.createXULElement(\"menupopup\");\n\n\t\t// Create Internet Archive menu item\n\t\tconst iaMenuItem = doc.createXULElement(\"menuitem\");\n\t\tiaMenuItem.id = \"zotero-moment-o7-ia\";\n\t\tiaMenuItem.setAttribute(\"label\", \"Internet Archive\");\n\n\t\t// Add click handler\n\t\tiaMenuItem.addEventListener(\"command\", async (_event) => {\n\t\t\ttry {\n\t\t\t\tthis.log(\"Internet Archive menu clicked\");\n\t\t\t\tconst items = window.ZoteroPane.getSelectedItems();\n\t\t\t\tif (!items || items.length === 0) {\n\t\t\t\t\tthrow new Error(\"No items selected\");\n\t\t\t\t}\n\n\t\t\t\t// Use the new service architecture\n\t\t\t\tconst results = await Zotero.MomentO7.ArchiveCoordinator.archiveItems(items, \"internetarchive\");\n\n\t\t\t\t// Show results to user\n\t\t\t\tconst failures = results.filter(r => !r.success);\n\t\t\t\tif (failures.length === 0) {\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(`Successfully archived ${results.length} item(s) to Internet Archive`);\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(3000);\n\t\t\t\t} else if (failures.length === results.length) {\n\t\t\t\t\t// All failed\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(\"Archive Error\");\n\t\t\t\t\tprogressWin.addDescription(failures[0].error || \"Unknown error\");\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t\t} else {\n\t\t\t\t\t// Some succeeded, some failed\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(`Archived ${results.length - failures.length} of ${results.length} items`);\n\t\t\t\t\tprogressWin.addDescription(`${failures.length} items failed`);\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(5000);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.log(\"Error archiving to Internet Archive: \" + error);\n\t\t\t\t// Also show error to user\n\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\tprogressWin.changeHeadline(\"Archive Error: \" + error.message);\n\t\t\t\tprogressWin.show();\n\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t}\n\t\t});\n\n\t\t// Create Archive.today menu item\n\t\tconst atMenuItem = doc.createXULElement(\"menuitem\");\n\t\tatMenuItem.id = \"zotero-moment-o7-archive-today\";\n\t\tatMenuItem.setAttribute(\"label\", \"Archive.today\");\n\n\t\t// Add click handler\n\t\tatMenuItem.addEventListener(\"command\", async (_event) => {\n\t\t\ttry {\n\t\t\t\tthis.log(\"Archive.today menu clicked\");\n\t\t\t\tconst items = window.ZoteroPane.getSelectedItems();\n\t\t\t\tif (!items || items.length === 0) {\n\t\t\t\t\tthrow new Error(\"No items selected\");\n\t\t\t\t}\n\n\t\t\t\t// Use the new service architecture\n\t\t\t\tconst results = await Zotero.MomentO7.ArchiveCoordinator.archiveItems(items, \"archivetoday\");\n\n\t\t\t\t// Show results to user\n\t\t\t\tconst failures = results.filter(r => !r.success);\n\t\t\t\tif (failures.length === 0) {\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(`Successfully archived ${results.length} item(s) to Archive.today`);\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(3000);\n\t\t\t\t} else if (failures.length === results.length) {\n\t\t\t\t\t// All failed\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(\"Archive Error\");\n\t\t\t\t\tprogressWin.addDescription(failures[0].error || \"Unknown error\");\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t\t} else {\n\t\t\t\t\t// Some succeeded, some failed\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(`Archived ${results.length - failures.length} of ${results.length} items`);\n\t\t\t\t\tprogressWin.addDescription(`${failures.length} items failed`);\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(5000);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.log(\"Error archiving to Archive.today: \" + error);\n\t\t\t\t// Also show error to user\n\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\tprogressWin.changeHeadline(\"Archive Error: \" + error.message);\n\t\t\t\tprogressWin.show();\n\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t}\n\t\t});\n\n\t\t// Create separator\n\t\tconst menuSeparator = doc.createXULElement(\"menuseparator\");\n\t\tmenuSeparator.id = \"zotero-moment-o7-menu-separator\";\n\n\t\t// Create Robust Link menu item\n\t\tconst robustMenuItem = doc.createXULElement(\"menuitem\");\n\t\trobustMenuItem.id = \"zotero-moment-o7-robust-link\";\n\t\trobustMenuItem.setAttribute(\"label\", \"Create Robust Link (All Archives)\");\n\n\t\t// Add click handler\n\t\trobustMenuItem.addEventListener(\"command\", async (_event) => {\n\t\t\ttry {\n\t\t\t\tthis.log(\"Robust Link menu clicked\");\n\t\t\t\tconst items = window.ZoteroPane.getSelectedItems();\n\t\t\t\tif (!items || items.length === 0) {\n\t\t\t\t\tthrow new Error(\"No items selected\");\n\t\t\t\t}\n\n\t\t\t\t// Get robust link services from preferences\n\t\t\t\tconst robustServices = Zotero.Prefs.get(\"extensions.momento7.robustLinkServices\",\n\t\t\t\t\t\"internetarchive,archivetoday\").split(\",\");\n\n\t\t\t\t// Archive to selected services\n\t\t\t\tconst allResults = [];\n\t\t\t\tfor (const serviceId of robustServices) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst results = await Zotero.MomentO7.ArchiveCoordinator.archiveItems(items, serviceId);\n\t\t\t\t\t\tallResults.push(...results);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.log(`Error archiving to ${serviceId}: ${error}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Show results\n\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\tprogressWin.changeHeadline(`Created robust links for ${items.length} item(s)`);\n\t\t\t\tprogressWin.addDescription(`Archived to ${robustServices.length} services`);\n\t\t\t\tprogressWin.show();\n\t\t\t\tprogressWin.startCloseTimer(3000);\n\t\t\t} catch (error) {\n\t\t\t\tthis.log(\"Error creating robust link: \" + error);\n\t\t\t\t// Also show error to user\n\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\tprogressWin.changeHeadline(\"Archive Error: \" + error.message);\n\t\t\t\tprogressWin.show();\n\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t}\n\t\t});\n\n\t\t// Create Perma.cc menu item\n\t\tconst permaccMenuItem = doc.createXULElement(\"menuitem\");\n\t\tpermaccMenuItem.id = \"zotero-moment-o7-permacc\";\n\t\tpermaccMenuItem.setAttribute(\"label\", \"Perma.cc (Academic)\");\n\n\t\t// Add click handler\n\t\tpermaccMenuItem.addEventListener(\"command\", async (_event) => {\n\t\t\ttry {\n\t\t\t\tthis.log(\"Perma.cc menu clicked\");\n\t\t\t\tconst items = window.ZoteroPane.getSelectedItems();\n\t\t\t\tif (!items || items.length === 0) {\n\t\t\t\t\tthrow new Error(\"No items selected\");\n\t\t\t\t}\n\n\t\t\t\t// Use the new service architecture\n\t\t\t\tconst results = await Zotero.MomentO7.ArchiveCoordinator.archiveItems(items, \"permacc\");\n\n\t\t\t\t// Show results to user\n\t\t\t\tconst failures = results.filter(r => !r.success);\n\t\t\t\tif (failures.length === 0) {\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(`Successfully archived ${results.length} item(s) to Perma.cc`);\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(3000);\n\t\t\t\t} else if (failures.length === results.length) {\n\t\t\t\t\t// All failed\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(\"Archive Error\");\n\t\t\t\t\tprogressWin.addDescription(failures[0].error || \"Unknown error\");\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t\t} else {\n\t\t\t\t\t// Some succeeded, some failed\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(`Archived ${results.length - failures.length} of ${results.length} items`);\n\t\t\t\t\tprogressWin.addDescription(`${failures.length} items failed`);\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(5000);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.log(\"Error archiving to Perma.cc: \" + error);\n\t\t\t\t// Also show error to user\n\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\tprogressWin.changeHeadline(\"Archive Error: \" + error.message);\n\t\t\t\tprogressWin.show();\n\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t}\n\t\t});\n\n\t\t// Create UK Web Archive menu item\n\t\tconst ukwebMenuItem = doc.createXULElement(\"menuitem\");\n\t\tukwebMenuItem.id = \"zotero-moment-o7-ukwebarchive\";\n\t\tukwebMenuItem.setAttribute(\"label\", \"UK Web Archive\");\n\n\t\t// Add click handler\n\t\tukwebMenuItem.addEventListener(\"command\", async (_event) => {\n\t\t\ttry {\n\t\t\t\tthis.log(\"UK Web Archive menu clicked\");\n\t\t\t\tconst items = window.ZoteroPane.getSelectedItems();\n\t\t\t\tif (!items || items.length === 0) {\n\t\t\t\t\tthrow new Error(\"No items selected\");\n\t\t\t\t}\n\n\t\t\t\t// Use the new service architecture\n\t\t\t\tconst results = await Zotero.MomentO7.ArchiveCoordinator.archiveItems(items, \"ukwebarchive\");\n\n\t\t\t\t// Show results to user\n\t\t\t\tconst failures = results.filter(r => !r.success);\n\t\t\t\tif (failures.length === 0) {\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(`Successfully nominated ${results.length} item(s) to UK Web Archive`);\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(3000);\n\t\t\t\t} else {\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(\"Archive Error\");\n\t\t\t\t\tprogressWin.addDescription(failures[0].error || \"Unknown error\");\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.log(\"Error with UK Web Archive: \" + error);\n\t\t\t\t// Also show error to user\n\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\tprogressWin.changeHeadline(\"Archive Error: \" + error.message);\n\t\t\t\tprogressWin.show();\n\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t}\n\t\t});\n\n\t\t// Create Arquivo.pt menu item\n\t\tconst arquivoptMenuItem = doc.createXULElement(\"menuitem\");\n\t\tarquivoptMenuItem.id = \"zotero-moment-o7-arquivopt\";\n\t\tarquivoptMenuItem.setAttribute(\"label\", \"Arquivo.pt (Portuguese)\");\n\n\t\t// Add click handler\n\t\tarquivoptMenuItem.addEventListener(\"command\", async (_event) => {\n\t\t\ttry {\n\t\t\t\tthis.log(\"Arquivo.pt menu clicked\");\n\t\t\t\tconst items = window.ZoteroPane.getSelectedItems();\n\t\t\t\tif (!items || items.length === 0) {\n\t\t\t\t\tthrow new Error(\"No items selected\");\n\t\t\t\t}\n\n\t\t\t\t// Use the new service architecture\n\t\t\t\tconst results = await Zotero.MomentO7.ArchiveCoordinator.archiveItems(items, \"arquivopt\");\n\n\t\t\t\t// Show results to user\n\t\t\t\tconst failures = results.filter(r => !r.success);\n\t\t\t\tif (failures.length === 0) {\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(`Successfully archived ${results.length} item(s) to Arquivo.pt`);\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(3000);\n\t\t\t\t} else {\n\t\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\t\tprogressWin.changeHeadline(\"Archive Error\");\n\t\t\t\t\tprogressWin.addDescription(failures[0].error || \"Unknown error\");\n\t\t\t\t\tprogressWin.show();\n\t\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.log(\"Error archiving to Arquivo.pt: \" + error);\n\t\t\t\t// Also show error to user\n\t\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\t\t\tprogressWin.changeHeadline(\"Archive Error: \" + error.message);\n\t\t\t\tprogressWin.show();\n\t\t\t\tprogressWin.startCloseTimer(8000);\n\t\t\t}\n\t\t});\n\n\t\t// Create second separator for preferences\n\t\tconst menuSeparator2 = doc.createXULElement(\"menuseparator\");\n\t\tmenuSeparator2.id = \"zotero-moment-o7-menu-separator-2\";\n\n\t\t// Create Preferences menu item\n\t\tconst prefsMenuItem = doc.createXULElement(\"menuitem\");\n\t\tprefsMenuItem.id = \"zotero-moment-o7-preferences\";\n\t\tprefsMenuItem.setAttribute(\"label\", \"Moment-o7 Preferences...\");\n\n\t\t// Add click handler\n\t\tprefsMenuItem.addEventListener(\"command\", async (_event) => {\n\t\t\ttry {\n\t\t\t\tthis.openPreferences();\n\t\t\t} catch (error) {\n\t\t\t\tthis.log(\"Error opening preferences: \" + error);\n\t\t\t}\n\t\t});\n\n\t\t// Assemble menu\n\t\tmenupopup.appendChild(iaMenuItem);\n\t\tmenupopup.appendChild(atMenuItem);\n\t\tmenupopup.appendChild(permaccMenuItem);\n\t\tmenupopup.appendChild(ukwebMenuItem);\n\t\tmenupopup.appendChild(arquivoptMenuItem);\n\t\tmenupopup.appendChild(menuSeparator);\n\t\tmenupopup.appendChild(robustMenuItem);\n\t\tmenupopup.appendChild(menuSeparator2);\n\t\tmenupopup.appendChild(prefsMenuItem);\n\t\tmenu.appendChild(menupopup);\n\n\t\t// Add to item menu\n\t\tzoteroItemMenu.appendChild(separator);\n\t\tzoteroItemMenu.appendChild(menu);\n\n\t\t// Store references for cleanup\n\t\tconst windowData = this.windows.get(window);\n\t\twindowData.menuItems.push(separator, menu);\n\n\t\tthis.storeAddedElement(separator);\n\t\tthis.storeAddedElement(menu);\n\t},\n\n\tstoreAddedElement(elem) {\n\t\tif (!elem.id) {\n\t\t\tthrow new Error(\"Element must have an id\");\n\t\t}\n\t\tthis.addedElementIDs.push(elem.id);\n\t},\n\n\tremoveFromWindow(window) {\n\t\tif (!window || !window.document) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst doc = window.document;\n\t\tthis.log(\"Removing from window\");\n\n\t\t// Remove all elements added to DOM\n\t\tfor (const id of this.addedElementIDs) {\n\t\t\tconst elem = doc.getElementById(id);\n\t\t\tif (elem) {\n\t\t\t\telem.remove();\n\t\t\t}\n\t\t}\n\n\t\t// Remove Fluent link if it exists\n\t\tconst fluentLink = doc.querySelector(\"[href=\\\"moment-o7.ftl\\\"]\");\n\t\tif (fluentLink) {\n\t\t\tfluentLink.remove();\n\t\t}\n\n\t\t// Clear window data\n\t\tthis.windows.delete(window);\n\t},\n\n\taddToAllWindows() {\n\t\tconst windows = Zotero.getMainWindows();\n\t\tfor (const win of windows) {\n\t\t\tif (!win.ZoteroPane) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.addToWindow(win);\n\t\t}\n\t},\n\n\tremoveFromAllWindows() {\n\t\tconst windows = Zotero.getMainWindows();\n\t\tfor (const win of windows) {\n\t\t\tif (!win.ZoteroPane) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.removeFromWindow(win);\n\t\t}\n\t},\n\n\topenPreferences() {\n\t\t// Use the simple inline preferences dialog\n\t\tZotero.MomentO7.Preferences.createInlinePreferences();\n\t},\n\n\tgetPreferencesHTML() {\n\t\treturn `<?xml version=\"1.0\"?>\n<?xml-stylesheet href=\"chrome://global/skin/\" type=\"text/css\"?>\n<?xml-stylesheet href=\"chrome://zotero-platform/content/preferences.css\"?>\n<window xmlns=\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\"\n\ttitle=\"Moment-o7 Preferences\"\n\tonload=\"initPreferences();\">\n\t\n\t<script src=\"chrome://zotero/content/include.js\"/>\n\t<script><![CDATA[\n\t\tfunction initPreferences() {\n\t\t\tZotero.MomentO7.Preferences.createPreferencesWindow(window);\n\t\t}\n\t]]></script>\n\t\n\t<vbox id=\"momento7-preferences-container\" flex=\"1\" style=\"padding: 20px;\">\n\t\t<!-- Content will be added dynamically -->\n\t</vbox>\n</window>`;\n\t},\n\n\tshutdown() {\n\t\tthis.log(\"Shutting down\");\n\n\t\t// Unregister notifier\n\t\tthis.unregisterNotifier();\n\n\t\t// Clear element ID list\n\t\tthis.addedElementIDs = [];\n\n\t\t// Clear other properties\n\t\tthis.initialized = false;\n\t\tthis.id = null;\n\t\tthis.version = null;\n\t\tthis.rootURI = null;\n\t}\n};"],"names":[],"sourceRoot":""}