{"version":3,"file":"zotero-moment-o7.js","mappings":";;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,QAAQ,sBAAsB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,kDAAkD;AACxE,mBAAmB,+CAA+C;AAClE,cAAc,0CAA0C;AACxD,mBAAmB,gDAAgD;AACnE,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;;AAEH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,YAAY;AAC7D,KAAK;AACL;AACA,KAAK;AACL,sCAAsC,YAAY,aAAa,QAAQ;AACvE;AACA,IAAI;AACJ;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;;AAEA;AACA,gCAAgC,kBAAkB,aAAa,6BAA6B;AAC5F,IAAI;AACJ,0CAA0C,6BAA6B,IAAI,qCAAqC;AAChH,IAAI;AACJ,uBAAuB,6BAA6B,IAAI,kBAAkB,aAAa,iBAAiB;AACxG;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,kDAAkD,oBAAoB;AACtE;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,E","sources":["webpack://zotero-moment-o7/./src/zotero-moment-o7.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Zotero Moment-o7 Plugin\n * Archives web resources to prevent link rot\n * @namespace\n */\nZotero.MomentO7 = {\n\tid: null,\n\tversion: null,\n\trootURI: null,\n\t_initialized: false,\n\t_addedElementIDs: [],\n\t_windows: new WeakMap(),\n\t_notifierID: null,\n\n\t/**\n\t * Initialize the plugin\n\t * @param {Object} params - Initialization parameters\n\t * @param {string} params.id - Plugin ID\n\t * @param {string} params.version - Plugin version\n\t * @param {string} params.rootURI - Plugin root URI\n\t */\n\tinit({ id, version, rootURI }) {\n\t\tif (this._initialized) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.id = id;\n\t\tthis.version = version;\n\t\tthis.rootURI = rootURI;\n\t\tthis._initialized = true;\n\n\t\tthis.log(\"Initializing Zotero Moment-o7 v\" + version);\n\n\t\t// Initialize namespace for new architecture\n\t\tif (!Zotero.MomentO7) {\n\t\t\tZotero.MomentO7 = this;\n\t\t}\n\n\t\t// Load new architecture modules\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/BaseArchiveService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ServiceRegistry.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ArchiveCoordinator.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/MementoChecker.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/Preferences.js\");\n\n\t\t// Load services\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/InternetArchiveService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ArchiveTodayService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/PermaCCService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/UKWebArchiveService.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ArquivoPtService.js\");\n\n\t\t// Load legacy modules (to be refactored)\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/Signpost.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/IaPusher.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/ArchiveTodayPusher.js\");\n\t\tServices.scriptloader.loadSubScript(rootURI + \"src/RobustLinkCreator.js\");\n\n\t\t// Initialize preferences\n\t\tZotero.MomentO7.Preferences.init();\n\n\t\t// Initialize new architecture\n\t\tthis.initializeServices();\n\n\t\t// Register notifier to watch for new items\n\t\tthis.registerNotifier();\n\t},\n\n\t/**\n\t * Log a message with the plugin prefix\n\t * @param {string} msg - Message to log\n\t */\n\tlog(msg) {\n\t\tZotero.debug(\"Zotero Moment-o7: \" + msg);\n\t},\n\n\tasync main() {\n\t\tthis.log(\"Main initialization complete\");\n\t},\n\n\tinitializeServices() {\n\t\t// Initialize core components\n\t\tZotero.MomentO7.ServiceRegistry.init();\n\t\tZotero.MomentO7.ArchiveCoordinator.init();\n\n\t\t// Register services\n\t\tconst iaService = new Zotero.MomentO7.InternetArchiveService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"internetarchive\", iaService);\n\n\t\tconst atService = new Zotero.MomentO7.ArchiveTodayService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"archivetoday\", atService);\n\n\t\tconst permaccService = new Zotero.MomentO7.PermaCCService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"permacc\", permaccService);\n\n\t\tconst ukWebArchiveService = new Zotero.MomentO7.UKWebArchiveService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"ukwebarchive\", ukWebArchiveService);\n\n\t\tconst arquivoPtService = new Zotero.MomentO7.ArquivoPtService();\n\t\tZotero.MomentO7.ServiceRegistry.register(\"arquivopt\", arquivoPtService);\n\n\t\tthis.log(\"Services initialized and registered\");\n\t},\n\n\tregisterNotifier() {\n\t\t// Register notifier to watch for new items being added\n\t\tconst notifierCallbacks = {\n\t\t\tnotify: async (event, type, ids, _extraData) => {\n\t\t\t\tif (type === \"item\" && event === \"add\") {\n\t\t\t\t\tthis.log(\"New items added: \" + ids.join(\", \"));\n\n\t\t\t\t\tfor (const id of ids) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst item = await Zotero.Items.getAsync(id);\n\n\t\t\t\t\t\t\t// Check if auto-archive is enabled\n\t\t\t\t\t\t\tconst autoArchiveEnabled = Zotero.Prefs.get(\"extensions.zotero.momento7.autoArchive\", true);\n\n\t\t\t\t\t\t\t// Only process web pages and other items with URLs\n\t\t\t\t\t\t\tif (autoArchiveEnabled && item && item.getField(\"url\")) {\n\t\t\t\t\t\t\t\tthis.log(\"Auto-archiving item: \" + item.getField(\"title\"));\n\n\t\t\t\t\t\t\t\t// Use new architecture for auto-archiving\n\t\t\t\t\t\t\t\tawait Zotero.MomentO7.ArchiveCoordinator.autoArchive(item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.log(\"Error processing item \" + id + \": \" + error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._notifierID = Zotero.Notifier.registerObserver(notifierCallbacks, [\"item\"]);\n\t\tthis.log(\"Notifier registered with ID: \" + this._notifierID);\n\t},\n\n\tunregisterNotifier() {\n\t\tif (this._notifierID) {\n\t\t\tZotero.Notifier.unregisterObserver(this._notifierID);\n\t\t\tthis.log(\"Notifier unregistered\");\n\t\t\tthis._notifierID = null;\n\t\t}\n\t},\n\n\t/**\n\t * Add plugin UI elements to a Zotero window\n\t * @param {Window} window - The Zotero window\n\t */\n\taddToWindow(window) {\n\t\tif (!window || !window.document) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log(\"Adding to window\");\n\n\t\t// Store window-specific data\n\t\tthis._windows.set(window, {\n\t\t\tmenuItems: [],\n\t\t\tlisteners: []\n\t\t});\n\n\t\t// Add menu items\n\t\tthis.addMenuItems(window);\n\n\t\t// Add Fluent localization if we have locale files\n\t\ttry {\n\t\t\twindow.MozXULElement.insertFTLIfNeeded(\"moment-o7.ftl\");\n\t\t} catch {\n\t\t\t// Fluent files not yet created, will add later\n\t\t\tthis.log(\"Fluent localization not yet available\");\n\t\t}\n\t},\n\n\taddMenuItems(window) {\n\t\tconst doc = window.document;\n\n\t\t// Wait for the item menu to be available\n\t\tconst itemMenu = doc.getElementById(\"zotero-itemmenu\");\n\t\tif (!itemMenu) {\n\t\t\tthis.log(\"Item menu not found\");\n\t\t\treturn;\n\t\t}\n\n\t\t// Create a simple separator\n\t\tconst separator = doc.createXULElement(\"menuseparator\");\n\t\tseparator.id = \"zotero-momento7-separator\";\n\n\t\t// Get enabled services from preferences\n\t\tconst enabledServices = Zotero.Prefs.get(\"extensions.zotero.momento7.enabledServices\", \"internetarchive,archivetoday\").split(\",\").filter(s => s);\n\n\t\t// Create menu items for enabled services\n\t\tconst menuItems = [];\n\n\t\tconst serviceInfo = {\n\t\t\tinternetarchive: { label: \"Archive to Internet Archive\", icon: \"IA\" },\n\t\t\tarchivetoday: { label: \"Archive to Archive.today\", icon: \"AT\" },\n\t\t\tpermacc: { label: \"Archive to Perma.cc\", icon: \"PC\" },\n\t\t\tukwebarchive: { label: \"Archive to UK Web Archive\", icon: \"UK\" },\n\t\t\tarquivopt: { label: \"Archive to Arquivo.pt\", icon: \"PT\" }\n\t\t};\n\n\t\t// Add menu items for each enabled service\n\t\tenabledServices.forEach(service => {\n\t\t\tif (serviceInfo[service]) {\n\t\t\t\t// Check if service is registered\n\t\t\t\tconst serviceInstance = Zotero.MomentO7.ServiceRegistry.get(service);\n\t\t\t\tif (serviceInstance) {\n\t\t\t\t\tmenuItems.push({\n\t\t\t\t\t\tid: `zotero-momento7-archive-${service}`,\n\t\t\t\t\t\tlabel: serviceInfo[service].label,\n\t\t\t\t\t\tservice: service\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Add robust link option if any services are enabled for robust links\n\t\tconst robustLinkServices = Zotero.Prefs.get(\"extensions.zotero.momento7.robustLinkServices\", \"internetarchive,archivetoday\").split(\",\").filter(s => s);\n\t\tif (robustLinkServices.length > 0) {\n\t\t\tmenuItems.push({\n\t\t\t\tid: \"zotero-momento7-archive-robust\",\n\t\t\t\tlabel: \"Create Robust Link\",\n\t\t\t\tservice: \"robust\"\n\t\t\t});\n\t\t}\n\n\t\t// Add separator first\n\t\titemMenu.appendChild(separator);\n\t\tthis._addedElementIDs.push(separator.id);\n\n\t\t// Create menu items\n\t\tmenuItems.forEach(itemConfig => {\n\t\t\tconst menuItem = doc.createXULElement(\"menuitem\");\n\t\t\tmenuItem.id = itemConfig.id;\n\t\t\tmenuItem.setAttribute(\"label\", itemConfig.label);\n\n\t\t\t// Add command handler\n\t\t\tmenuItem.addEventListener(\"command\", async (event) => {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tawait this.handleMenuCommand(window, itemConfig.service);\n\t\t\t});\n\n\t\t\titemMenu.appendChild(menuItem);\n\t\t\tthis._addedElementIDs.push(menuItem.id);\n\t\t});\n\n\t},\n\n\tasync handleMenuCommand(window, service) {\n\t\ttry {\n\t\t\tconst items = window.ZoteroPane.getSelectedItems();\n\t\t\tif (!items || items.length === 0) {\n\t\t\t\tthis.showError(\"No items selected\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Filter items that have URLs\n\t\t\tconst itemsWithUrls = items.filter(item => item.getField(\"url\"));\n\t\t\tif (itemsWithUrls.length === 0) {\n\t\t\t\tthis.showError(\"Selected items have no URLs to archive\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (service === \"robust\") {\n\t\t\t\t// Handle robust link creation\n\t\t\t\tawait this.createRobustLinks(itemsWithUrls);\n\t\t\t} else {\n\t\t\t\t// Handle single service archiving\n\t\t\t\tconst results = await Zotero.MomentO7.ArchiveCoordinator.archiveItems(itemsWithUrls, service);\n\t\t\t\tthis.showArchiveResults(results, service);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log(\"Error in menu command: \" + error);\n\t\t\tthis.showError(error.message || \"Archive operation failed\");\n\t\t}\n\t},\n\n\tasync createRobustLinks(items) {\n\t\ttry {\n\t\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: false });\n\t\t\tprogressWin.changeHeadline(\"Creating Robust Links\");\n\t\t\tprogressWin.addDescription(\"Archiving to multiple services...\");\n\t\t\tprogressWin.show();\n\n\t\t\t// Use the RobustLinkCreator\n\t\t\tconst results = await Zotero.MomentO7.RobustLinkCreator.createRobustLinks(items);\n\n\t\t\tprogressWin.close();\n\n\t\t\t// Count successes and failures\n\t\t\tconst successful = results.filter(r => r.success).length;\n\t\t\tconst failed = results.length - successful;\n\n\t\t\tif (failed === 0) {\n\t\t\t\tthis.showSuccess(`Created robust links for ${successful} item(s)`);\n\t\t\t} else if (successful === 0) {\n\t\t\t\tthis.showError(\"Failed to create any robust links\");\n\t\t\t} else {\n\t\t\t\tthis.showWarning(`Robust links: ${successful} succeeded, ${failed} failed`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log(\"Error creating robust links: \" + error);\n\t\t\tthis.showError(error.message || \"Failed to create robust links\");\n\t\t}\n\t},\n\n\tshowArchiveResults(results, service) {\n\t\tconst successes = results.filter(r => r.success);\n\t\tconst failures = results.filter(r => !r.success);\n\n\t\tif (failures.length === 0) {\n\t\t\tthis.showSuccess(`Archived ${successes.length} item(s) to ${this.getServiceName(service)}`);\n\t\t} else if (successes.length === 0) {\n\t\t\tthis.showError(`Failed to archive to ${this.getServiceName(service)}: ${failures[0].error || \"Unknown error\"}`);\n\t\t} else {\n\t\t\tthis.showWarning(`${this.getServiceName(service)}: ${successes.length} succeeded, ${failures.length} failed`);\n\t\t}\n\t},\n\n\tgetServiceName(serviceId) {\n\t\tconst names = {\n\t\t\tinternetarchive: \"Internet Archive\",\n\t\t\tarchivetoday: \"Archive.today\",\n\t\t\tpermacc: \"Perma.cc\",\n\t\t\tukwebarchive: \"UK Web Archive\",\n\t\t\tarquivopt: \"Arquivo.pt\"\n\t\t};\n\t\treturn names[serviceId] || serviceId;\n\t},\n\n\tshowSuccess(message) {\n\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\tprogressWin.changeHeadline(\"Success\");\n\t\tprogressWin.addDescription(message);\n\t\tprogressWin.show();\n\t\tprogressWin.startCloseTimer(3000);\n\t},\n\n\tshowError(message) {\n\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\tprogressWin.changeHeadline(\"Error\");\n\t\tprogressWin.addDescription(message);\n\t\tprogressWin.show();\n\t\tprogressWin.startCloseTimer(5000);\n\t},\n\n\tshowWarning(message) {\n\t\tconst progressWin = new Zotero.ProgressWindow({ closeOnClick: true });\n\t\tprogressWin.changeHeadline(\"Warning\");\n\t\tprogressWin.addDescription(message);\n\t\tprogressWin.show();\n\t\tprogressWin.startCloseTimer(4000);\n\t},\n\n\t/**\n\t * Remove plugin UI elements from a Zotero window\n\t * @param {Window} window - The Zotero window\n\t */\n\tremoveFromWindow(window) {\n\t\tif (!window || !window.document) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst doc = window.document;\n\t\tthis.log(\"Removing from window\");\n\n\t\t// Remove all elements added to DOM\n\t\tfor (const id of this._addedElementIDs) {\n\t\t\tconst elem = doc.getElementById(id);\n\t\t\tif (elem && elem.parentNode) {\n\t\t\t\telem.parentNode.removeChild(elem);\n\t\t\t}\n\t\t}\n\n\t\t// Remove Fluent link if it exists\n\t\tconst fluentLink = doc.querySelector(\"[href=\\\"moment-o7.ftl\\\"]\");\n\t\tif (fluentLink) {\n\t\t\tfluentLink.remove();\n\t\t}\n\n\t\t// Clear window data\n\t\tthis._windows.delete(window);\n\t},\n\n\taddToAllWindows() {\n\t\tconst windows = Zotero.getMainWindows();\n\t\tfor (const win of windows) {\n\t\t\tif (!win.ZoteroPane) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.addToWindow(win);\n\t\t}\n\t},\n\n\tremoveFromAllWindows() {\n\t\tconst windows = Zotero.getMainWindows();\n\t\tfor (const win of windows) {\n\t\t\tif (!win.ZoteroPane) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.removeFromWindow(win);\n\t\t}\n\t},\n\n\t/**\n\t * Open the preferences dialog\n\t */\n\topenPreferences() {\n\t\tthis.log(\"Opening preferences...\");\n\t\t// Open Zotero's preferences window to our pane\n\t\tif (typeof Zotero.PreferencePanes !== \"undefined\" && Zotero.PreferencePanes.register) {\n\t\t\tthis.log(\"Using Zotero preference panes system\");\n\t\t\t// Register our pane if not already registered\n\t\t\tif (!Zotero.PreferencePanes.pluginPanes?.find(p => p.id === \"momento7\")) {\n\t\t\t\tthis.log(\"Registering preference pane\");\n\t\t\t\tZotero.PreferencePanes.register({\n\t\t\t\t\tpluginID: \"zotero-moment-o7@github.com\",\n\t\t\t\t\tsrc: this.rootURI + \"addon/content/preferences.xhtml\",\n\t\t\t\t\tlabel: \"Moment-o7\",\n\t\t\t\t\timage: this.rootURI + \"icon48.png\"\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Open preferences to our pane\n\t\t\tthis.log(\"Opening preferences window\");\n\t\t\tZotero.Utilities.Internal.openPreferences(\"zotero-moment-o7@github.com\");\n\t\t} else {\n\t\t\tthis.log(\"Falling back to inline preferences\");\n\t\t\t// Fallback to simple dialog\n\t\t\tZotero.MomentO7.Preferences.createInlinePreferences();\n\t\t}\n\t},\n\n\tshutdown() {\n\t\tthis.log(\"Shutting down\");\n\n\t\t// Unregister notifier\n\t\tthis.unregisterNotifier();\n\n\t\t// Clear element ID list\n\t\tthis._addedElementIDs = [];\n\n\t\t// Clear other properties\n\t\tthis._initialized = false;\n\t\tthis.id = null;\n\t\tthis.version = null;\n\t\tthis.rootURI = null;\n\t}\n};"],"names":[],"sourceRoot":""}